name: havit-server-dev

on:
  push:
    branches: [develop]

jobs:
  build:
    env:
      PORT: ${{ secrets.PORT }}
      MONGODB_URI_DEV: ${{ secrets.MONGODB_URI_DEV }}
      MONGODB_URI_PROD: ${{ secrets.MONGODB_URI_PROD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGION: ${{ secrets.REGION }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create .env file
        run: |
          touch .env
          echo MONGODB_URI_DEV=${{ secrets.MONGODB_URI_DEV }} >> .env
          echo MONGODB_URI_PROD=${{ secrets.MONGODB_URI_PROD }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo REGION=${{ secrets.REGION }} >> .env
          cat .env

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@v1.2.1
        with:
          name: 'fcm-admin-credentials.json'
          json: ${{ secrets.FIREBASE_JSON }}
          dir: 'src/'

      - name: Install dependencies
        run: yarn
      - name: Run build
        run: yarn build

      - name: Build the Docker image
        run: docker build -t havit/havit-server-dev -f Dockerfile . --build-arg NODE_ENV="development"

      - name: Generate Deployment Package
        run: zip -r deploy.zip *

      - name: Add .env to deploy.zip
        run: zip deploy.zip .env

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: '${{ steps.current-time.outputs.time }}'
          replace-with: '-'
          flags: 'g'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: havit-server-dev
          environment_name: Havitserverdev-env
          version_label: 'havit-server-dev${{ steps.format-time.outputs.replaced }}'
          region: ${{ secrets.REGION }}
          deployment_package: deploy.zip

      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Github Action Push Server
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.
